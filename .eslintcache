[{"/home/nox/Documents/projects/firebase-authentication-system/src/index.js":"1","/home/nox/Documents/projects/firebase-authentication-system/src/App.js":"2","/home/nox/Documents/projects/firebase-authentication-system/src/reportWebVitals.js":"3","/home/nox/Documents/projects/firebase-authentication-system/src/config/FirebaseConfig.js":"4","/home/nox/Documents/projects/firebase-authentication-system/src/store/reducers/rootReducer.js":"5","/home/nox/Documents/projects/firebase-authentication-system/src/store/reducers/authReducer.js":"6","/home/nox/Documents/projects/firebase-authentication-system/src/views/Login.js":"7","/home/nox/Documents/projects/firebase-authentication-system/src/views/Signup.js":"8","/home/nox/Documents/projects/firebase-authentication-system/src/store/actions/authActions.js":"9","/home/nox/Documents/projects/firebase-authentication-system/src/components/TextInputField.js":"10","/home/nox/Documents/projects/firebase-authentication-system/src/utils/validation.js":"11","/home/nox/Documents/projects/firebase-authentication-system/src/components/Navbar.js":"12","/home/nox/Documents/projects/firebase-authentication-system/src/utils/utils.js":"13","/home/nox/Documents/projects/firebase-authentication-system/src/views/Home.js":"14"},{"size":3841,"mtime":1612303587798,"results":"15","hashOfConfig":"16"},{"size":670,"mtime":1612304588878,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1612298873536,"results":"18","hashOfConfig":"16"},{"size":647,"mtime":1612303552766,"results":"19","hashOfConfig":"16"},{"size":347,"mtime":1612303541603,"results":"20","hashOfConfig":"16"},{"size":754,"mtime":1612304005644,"results":"21","hashOfConfig":"16"},{"size":4666,"mtime":1612303511931,"results":"22","hashOfConfig":"16"},{"size":6726,"mtime":1612303512010,"results":"23","hashOfConfig":"16"},{"size":1784,"mtime":1612303999911,"results":"24","hashOfConfig":"16"},{"size":1566,"mtime":1612304093705,"results":"25","hashOfConfig":"16"},{"size":3011,"mtime":1612304109307,"results":"26","hashOfConfig":"16"},{"size":12369,"mtime":1612306275198,"results":"27","hashOfConfig":"16"},{"size":443,"mtime":1612304842146,"results":"28","hashOfConfig":"16"},{"size":550,"mtime":1612306612100,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"di103r",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nox/Documents/projects/firebase-authentication-system/src/index.js",["64"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//importing 'redux': Redux Store\n//createStore: create our redux store\n//applyMiddleware: extend Redux with custom functionality\nimport { createStore, applyMiddleware, compose } from 'redux';\n \n//importing 'react-redux': binding layer between the store and the dom\n//Provider: makes our store available to be used in our components\nimport { Provider, useSelector } from \"react-redux\";\n// import { Provider } from \"react-redux\";\n//----------------------------------------------------------\n\n\n//Reducers: handles the store opertations and data mutations\n//import rootReducer \nimport  rootReducer from './store/reducers/rootReducer';\n\n//import thunk\n//thunk: is a middleware that allows us to return a function instead of an action-creator\n//these asynchronous funcitons send a call do the processing and then dispatch a synchronous action \nimport thunk from 'redux-thunk';\n\n\n//firebase\n//----------------------------------------------------------\n//importing Firebase \n\n\n//importing react-redux-firebase\n//ReactReduxFirebaseProvider: lets rrfProps(store content from firebase) be available to our redux store\n//getFirebase: used to manipulate data in firebase\n//isLoaded: hepler funciton, detects if data from redux state has been loaded or not\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded, firebaseConnect  } from \"react-redux-firebase\";\n\n//importing redux-firestore\n//createFirestoreInstance: in v3.0.0 version this is introduced that is passed in rrfProps\n//getFirestore: used to manipulate data in firestore\n//reduxFirestore: v2.0.0 way to firebase-store-enhancer\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\n\nimport firebase from \"./config/FirebaseConfig\";\n//----------------------------------------------------------\n\n//store\n//----------------------------------------------------------\n//create store\n//createStore( reducer, store-enhancer ) \n//[OR]  createStore( reducer, compose(...multiple-store-enhancers) ) \n//compose: use to apply multiple store enhancer. (programmatic utility)\n//thunk.withExtraArgument(object of store-enhacer): adds these encapsulated  store-enhancers as an extra-argument to the reducer\n//reduxFirestore(firebase): adds store-enhancer of Firestore \n\nexport const store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase)\n  )\n);\n\n//react-redux-firebase-configuration of store\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n//react-redux-firebase-props the actual contents of the store from firebase\nconst rrfProps = {\n  firebase,\n  config:   rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n//----------------------------------------------------------\n\n//wait to load\n//----------------------------------------------------------\nconst AuthIsLoaded = ( {children} )=>{\n  const auth = useSelector( state=>state.firebase.auth );\n  if(!isLoaded(auth)) return ( <p className=\"center\">Loading...</p> );\n  return children;\n}\n//----------------------------------------------------------\n\n//we are rendering our web app accordingly to the dom\n//----------------------------------------------------------\nReactDOM.render(\n  \n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>\n\n  ,document.getElementById('root')\n);\n//----------------------------------------------------------\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n",["65","66"],"/home/nox/Documents/projects/firebase-authentication-system/src/App.js",[],"/home/nox/Documents/projects/firebase-authentication-system/src/reportWebVitals.js",[],"/home/nox/Documents/projects/firebase-authentication-system/src/config/FirebaseConfig.js",[],"/home/nox/Documents/projects/firebase-authentication-system/src/store/reducers/rootReducer.js",[],"/home/nox/Documents/projects/firebase-authentication-system/src/store/reducers/authReducer.js",[],"/home/nox/Documents/projects/firebase-authentication-system/src/views/Login.js",["67","68","69","70","71","72"],"import React, { useState, useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { NavLink, useHistory, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport TextInputField from \"../components/TextInputField\";\nimport {\n  authMessageResetAction,\n  loginAction,\n  logoutAction,\n} from \"../store/actions/authActions\";\nimport { validateEmail, validatePassword } from \"../utils/validation\";\n\nfunction Login(props) {\n  const { login, logout, authMessageReset } = props;\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [emailBlur, setEmailBlur] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [passwordBlur, setPasswordBlur] = useState(false);\n\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const submitLoginForm = (e) => {\n    e.preventDefault();\n    setEmailBlur(true);\n    setPasswordBlur(true);\n    if(validateEmail(email).isValid && validatePassword(password).isValid)\n      login({ email, password });\n  };\n  const logoutBtnClick = () => {\n    logout();\n  };\n\n  const { authMessage, authError } = useSelector((state) => state.auth);\n  useEffect(() => {\n    if (authMessage == \"LOGIN_SUCCESS\") {\n      setTimeout(() => {\n        authMessageReset();\n        history.push(\"/\");\n      }, 3000);\n    }\n  }, [authMessage]);\n  return (\n    <div className=\"flexPage\">\n      <div className=\"container\">\n        <div className=\"card auth-card\">\n          <div className=\"accent-banner\">\n            <span className=\"headTitle\">Authentication</span>\n          </div>\n          <div className=\"auth-message-display \">\n            <div className=\"content-container\">\n              {authMessage == \"LOGIN_SUCCESS\" && (\n                <div className=\"log-box success\">\n                  <p className=\"center\"> You are successfully logged in </p>\n                </div>\n              )}\n              {authMessage == \"LOGIN_ERROR\" && (\n                <div className=\"log-box error\">\n                  <p className=\"center\"> {authError} </p>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"auth-form-container\">\n            <div className=\"content-container\">\n              <form>\n                <div className=\"row\">\n                  <div className=\"col s12\">\n                    <TextInputField\n                      id=\"login-email\"\n                      label=\"Email\"\n                      type={\"text\"}\n                      valid={{\n                        ...validateEmail(email),\n                        ...(authMessage == \"LOGIN_ERROR\"? {isValid: false}: {})\n                      }}\n                      value={email}\n                      setValue={setEmail}\n                      blur={emailBlur}\n                      setBlur={setEmailBlur}\n                    />\n                  </div>\n                  <div className=\"col s12\">\n                    <TextInputField\n                      id=\"login-password\"\n                      label=\"Password\"\n                      type={passwordVisible?\"text\":\"password\"}\n                      valid={validatePassword(password)}\n                      value={password}\n                      setValue={setPassword}\n                      blur={passwordBlur}\n                      passwordVisible={passwordVisible}\n                      setPasswordVisible={setPasswordVisible}\n                      setBlur={setPasswordBlur}\n                    />\n                  </div>\n                </div>\n                <div className=\"auth-action col-padding row-flex justify-space-between\">\n                  <div className=\"\">\n                    <button className=\"btn auth-btn\" onClick={submitLoginForm}>Login</button>\n                  </div>\n                  <div className=\"\">\n                    {/* <a className=\"link\">Forgot Password ?</a> */}\n                    <br />\n                    <NavLink to=\"/signup\"\n                    className=\"link\"\n                    >Not Signed Up ?</NavLink>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n          {/* <button onClick={logoutBtnClick}>Logout</button> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (creds) => {\n      dispatch(loginAction(creds));\n    },\n    logout: () => {\n      dispatch(logoutAction());\n    },\n    authMessageReset: () => {\n      dispatch(authMessageResetAction());\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter\n)(Login);\n","/home/nox/Documents/projects/firebase-authentication-system/src/views/Signup.js",["73","74","75","76","77","78"],"import React, { useState, useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { NavLink, useHistory, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport TextInputField from \"../components/TextInputField\";\nimport {\n  authMessageResetAction,\n  loginAction,\n  logoutAction,\n  signupAction,\n} from \"../store/actions/authActions\";\nimport {\n  validateConfirmPassword,\n  validateEmail,\n  validateName,\n  validatePassword,\n} from \"../utils/validation\";\n\nfunction Signup(props) {\n  const { signup, logout, authMessageReset } = props;\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [emailBlur, setEmailBlur] = useState(false);\n\n  const [password, setPassword] = useState(\"\");\n  const [passwordBlur, setPasswordBlur] = useState(false);\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  \n  const [firstName, setFirstName] = useState();\n  const [firstNameBlur, setFirstNameBlur] = useState(false);\n\n  const [lastName, setLastName] = useState();\n  const [lastNameBlur, setLastNameBlur] = useState(false);\n\n  const [confirmPassword, setConfirmPassword] = useState();\n  const [confirmPasswordBlur, setConfirmPasswordBlur] = useState(false);\n\n  const submitSignupForm = (e) => {\n    e.preventDefault();\n    setEmailBlur(true);\n    setPasswordBlur(true);\n    setConfirmPasswordBlur(true);\n    setFirstNameBlur(true);\n    setLastNameBlur(true);\n    if (\n      validateEmail(email).isValid &&\n      validatePassword(password).isValid &&\n      validateName(firstName).isValid &&\n      validateName(lastName).isValid &&\n      validateConfirmPassword(password, confirmPassword).isValid\n    )\n      signup({ email, password, firstName, lastName });\n  };\n  const logoutBtnClick = () => {\n    logout();\n  };\n\n  const { authMessage, authError } = useSelector((state) => state.auth);\n  useEffect(() => {\n    if (authMessage == \"SIGNUP_SUCCESS\") {\n      setTimeout(() => {\n        authMessageReset();\n        history.push(\"/\");\n      }, 3000);\n    }\n  }, [authMessage]);\n  return (\n    <div className=\"flexPage\">\n      <div className=\"container\">\n        <div className=\"card auth-card\">\n          <div className=\"accent-banner\">\n            <span className=\"headTitle\">Register</span>\n          </div>\n          <div className=\"auth-message-display \">\n            <div className=\"content-container\">\n              {authMessage == \"SIGNUP_SUCCESS\" && (\n                <div className=\"log-box success\">\n                  <p className=\"center\"> You are successfully signed up </p>\n                </div>\n              )}\n              {authMessage == \"SIGNUP_ERROR\" && (\n                <div className=\"log-box error\">\n                  <p className=\"center\"> {authError} </p>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"auth-form-container\">\n            <div className=\"content-container\">\n              <form>\n                <div className=\"row\">\n                  <div className=\"col s6\">\n                    <TextInputField\n                      id=\"signup-firstName\"\n                      label=\"First Name\"\n                      type={\"text\"}\n                      valid={validateName(firstName)}\n                      value={firstName}\n                      setValue={setFirstName}\n                      blur={firstNameBlur}\n                      setBlur={setFirstNameBlur}\n                    />\n                  </div>\n                  <div className=\"col s6\">\n                    <TextInputField\n                      id=\"signup-lastName\"\n                      label=\"Last Name\"\n                      type={\"text\"}\n                      valid={validateName(lastName)}\n                      value={lastName}\n                      setValue={setLastName}\n                      blur={lastNameBlur}\n                      setBlur={setLastNameBlur}\n                    />\n                  </div>\n\n                  <div className=\"col s12\">\n                    <TextInputField\n                      id=\"signup-email\"\n                      label=\"Email\"\n                      type={\"text\"}\n                      valid={validateEmail(email)}\n                      value={email}\n                      setValue={setEmail}\n                      blur={emailBlur}\n                      setBlur={setEmailBlur}\n                    />\n                  </div>\n                  <div className=\"col s12\">\n                    <TextInputField\n                      id=\"login-password\"\n                      label=\"Password\"\n                      type={passwordVisible ? \"text\" : \"password\"}\n                      valid={validatePassword(password)}\n                      value={password}\n                      setValue={setPassword}\n                      blur={passwordBlur}\n                      passwordVisible={passwordVisible}\n                      setPasswordVisible={setPasswordVisible}\n                      setBlur={setPasswordBlur}\n                    />\n                  </div>\n                  <div className=\"col s12\">\n                    <TextInputField\n                      id=\"signup-confirmPassword\"\n                      label=\"Confirm Password\"\n                      type={passwordVisible ? \"text\" : \"password\"}\n                      valid={validateConfirmPassword(confirmPassword, password)}\n                      value={confirmPassword}\n                      setValue={setConfirmPassword}\n                      blur={confirmPasswordBlur}\n                      setBlur={setConfirmPasswordBlur}\n                    />\n                  </div>\n                </div>\n                <div className=\"auth-action col-padding row-flex justify-space-between\">\n                  <div className=\"\">\n                    <button className=\"btn auth-btn\" onClick={submitSignupForm}>\n                      SignUp\n                    </button>\n                  </div>\n                  <div className=\"\">\n                    <NavLink to=\"/login\" className=\"link\">\n                      Already Registered! Login?\n                    </NavLink>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n          {/* <button onClick={logoutBtnClick}>Logout</button> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signup: (creds) => {\n      dispatch(signupAction(creds));\n    },\n    logout: () => {\n      dispatch(logoutAction());\n    },\n    authMessageReset: () => {\n      dispatch(authMessageResetAction());\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter\n)(Signup);\n","/home/nox/Documents/projects/firebase-authentication-system/src/store/actions/authActions.js",[],"/home/nox/Documents/projects/firebase-authentication-system/src/components/TextInputField.js",["79","80","81","82"],"import React, { useEffect, useState } from \"react\";\nimport { v1 as uuid } from \"uuid\";\n\nfunction TextInputField(props) {\n  const {\n    id = uuid(),\n    label = \"\",\n    type = \"type\",\n    setValue,\n    value,\n    valid,\n    blur,\n    setBlur,\n    passwordVisible = null,\n    setPasswordVisible,\n  } = props;\n\n  const [styleClass, setStyleClass] = useState(\"unfocused\");\n  useEffect(() => {\n    if (!blur) return;\n    if (valid.isValid == true) {\n      setStyleClass(\"valid\");\n    } else {\n      setStyleClass(\"invalid\");\n    }\n  }, [valid]);\n  return (\n    <div className=\"input-wrapper\">\n      <div className={`input-field input-container ${styleClass}`}>\n        <label htmlFor={id}>{label}</label>\n        {/* <div className=\"row-flex\"> */}\n          <input\n            id={id}\n            type={type}\n            onChange={(e) => {\n              setValue(e.target.value);\n            }}\n            onBlur={(e) => {\n              setBlur(true);\n            }}\n            value={value}\n          />\n          {passwordVisible != null && (\n            <>\n              <i className=\"material-icons cursor-pointer\" onClick={() => {setPasswordVisible(!passwordVisible)}}>\n                {passwordVisible == true ? \"visibility\" : \"visibility_off\"}\n              </i>\n              <div className=\"box-10px\"></div>\n            </>\n          )}\n        {/* </div> */}\n      </div>\n      {blur && valid.isValid == false && valid.error && (\n        <span className=\"helper-text error-text\">{valid.error}</span>\n      )}\n    </div>\n  );\n}\n\nexport default TextInputField;\n","/home/nox/Documents/projects/firebase-authentication-system/src/utils/validation.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"import { Collection } from \"react-materialize\";\n\nexport const validateEmail = (email) => {\n  if (email == \"\") return { isValid: false, error: \"Field Requied\" };\n  const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (emailRegex.test(email)) {\n    return { isValid: true, error: null };\n  } else {\n    return { isValid: false, error: \"Invalid Email\" };\n  }\n};\nexport const validateName = (name) => {\n  if (name === undefined || name == \"\" || name.length == 0)\n    return { isValid: false, error: \"Field Requied\" };\n  return { isValid: true, error: null };\n};\nexport const validatePassword = (password) => {\n  if (password == \"\") return { isValid: false, error: \"Field Requied\" };\n  if (password.length < 8)\n    return { isValid: false, error: \"Min. length is 8 characters\" };\n  return { isValid: true, error: null };\n};\n\nexport const validateConfirmPassword = (password, confirmPassword) => {\n  if (confirmPassword == \"\") return { isValid: false, error: \"Field Requied\" };\n  if (password != confirmPassword)\n    return { isValid: false, error: \"passwords didnot match\" };\n  return { isValid: true, error: null };\n};\n\nexport const validateDiceGame_BetValue = (bet, range) => {\n  // console.log(\"in validateDiceGame_BetValue\");\n  try {\n    if (isNaN(bet) || parseInt(bet) != bet || bet.toString().includes(\".\"))\n      throw new Error(\"Bet Value is supposed to be an integer\");\n    if(range){\n      // console.log(range, bet, isInRange({...range, value: bet}));\n      if(!isInRange({...range, value: bet}))\n        throw new Error(`Min: ${range.min} Max: ${range.max}`);\n    }\n    return true;\n  } catch (err) {\n    // console.log(err);\n    return err.message;\n  }\n  return true;\n};\n\nexport const isInRange =({min, max, value})=> (value>=min && value<=max)\n\nexport const validateDiceGame_WinChance = (winChance, range) => {\n  try {\n    if (isNaN(winChance))\n      throw new Error(\"Win Chance  is supposed to be a num\");\n    if(range){\n      if(!isInRange({...range, value: winChance}))\n        throw new Error(`Min: ${range.min} Max: ${range.max}`);\n    }\n    return true; \n  } catch (err) {\n    // console.log(err);\n    return err.message;\n  }\n};\n\nexport const validateDiceGame_Payout = (payout, range) => {\n  try {\n    if (isNaN(payout))\n      throw new Error(\"Payout is supposed to be a num\");\n    if(range){\n      if(!isInRange({...range, value: payout}))\n        throw new Error(`Min: ${range.min} Max: ${range.max}`);\n    }\n    return true; \n  } catch (err) {\n    // console.log(err);\n    return err.message;\n  }\n  return true;\n};\n\nexport const validateDiceGame_DiceValue = (dice, range)=>{\n  try{\n    if (isNaN(dice))\n      throw new Error(\"Dice Value is supposed to be an num\");\n    if(range){\n      if(!isInRange({...range, value: dice}))\n        throw new Error(`Min: ${range.min} Max: ${range.max}`);\n    }\n    return true;\n  }catch(err){\n    return true;\n  }\n  return true;\n}","/home/nox/Documents/projects/firebase-authentication-system/src/components/Navbar.js",["98","99","100","101","102","103","104","105","106","107","108","109"],"/home/nox/Documents/projects/firebase-authentication-system/src/utils/utils.js",["110"],"/home/nox/Documents/projects/firebase-authentication-system/src/views/Home.js",[],{"ruleId":"111","severity":1,"message":"112","line":37,"column":61,"nodeType":"113","messageId":"114","endLine":37,"endColumn":76},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":31,"column":9,"nodeType":"113","messageId":"114","endLine":31,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":37,"column":21,"nodeType":"122","messageId":"123","endLine":37,"endColumn":23},{"ruleId":"124","severity":1,"message":"125","line":43,"column":6,"nodeType":"126","endLine":43,"endColumn":19,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"121","line":53,"column":28,"nodeType":"122","messageId":"123","endLine":53,"endColumn":30},{"ruleId":"120","severity":1,"message":"121","line":58,"column":28,"nodeType":"122","messageId":"123","endLine":58,"endColumn":30},{"ruleId":"120","severity":1,"message":"121","line":76,"column":41,"nodeType":"122","messageId":"123","endLine":76,"endColumn":43},{"ruleId":"111","severity":1,"message":"128","line":8,"column":3,"nodeType":"113","messageId":"114","endLine":8,"endColumn":14},{"ruleId":"111","severity":1,"message":"119","line":55,"column":9,"nodeType":"113","messageId":"114","endLine":55,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":61,"column":21,"nodeType":"122","messageId":"123","endLine":61,"endColumn":23},{"ruleId":"124","severity":1,"message":"125","line":67,"column":6,"nodeType":"126","endLine":67,"endColumn":19,"suggestions":"129"},{"ruleId":"120","severity":1,"message":"121","line":77,"column":28,"nodeType":"122","messageId":"123","endLine":77,"endColumn":30},{"ruleId":"120","severity":1,"message":"121","line":82,"column":28,"nodeType":"122","messageId":"123","endLine":82,"endColumn":30},{"ruleId":"120","severity":1,"message":"121","line":21,"column":23,"nodeType":"122","messageId":"123","endLine":21,"endColumn":25},{"ruleId":"124","severity":1,"message":"130","line":26,"column":6,"nodeType":"126","endLine":26,"endColumn":13,"suggestions":"131"},{"ruleId":"120","severity":1,"message":"121","line":46,"column":34,"nodeType":"122","messageId":"123","endLine":46,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":53,"column":30,"nodeType":"122","messageId":"123","endLine":53,"endColumn":32},{"ruleId":"111","severity":1,"message":"132","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":4,"column":13,"nodeType":"122","messageId":"123","endLine":4,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":5,"column":44,"nodeType":"135","messageId":"136","endLine":5,"endColumn":45,"suggestions":"137"},{"ruleId":"133","severity":1,"message":"134","line":5,"column":69,"nodeType":"135","messageId":"136","endLine":5,"endColumn":70,"suggestions":"138"},{"ruleId":"133","severity":1,"message":"134","line":5,"column":78,"nodeType":"135","messageId":"136","endLine":5,"endColumn":79,"suggestions":"139"},{"ruleId":"133","severity":1,"message":"134","line":5,"column":82,"nodeType":"135","messageId":"136","endLine":5,"endColumn":83,"suggestions":"140"},{"ruleId":"120","severity":1,"message":"121","line":13,"column":34,"nodeType":"122","messageId":"123","endLine":13,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":13,"column":55,"nodeType":"122","messageId":"123","endLine":13,"endColumn":57},{"ruleId":"120","severity":1,"message":"121","line":18,"column":16,"nodeType":"122","messageId":"123","endLine":18,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":25,"column":23,"nodeType":"122","messageId":"123","endLine":25,"endColumn":25},{"ruleId":"120","severity":1,"message":"141","line":26,"column":16,"nodeType":"122","messageId":"123","endLine":26,"endColumn":18},{"ruleId":"120","severity":1,"message":"141","line":34,"column":37,"nodeType":"122","messageId":"123","endLine":34,"endColumn":39},{"ruleId":"142","severity":1,"message":"143","line":46,"column":3,"nodeType":"144","messageId":"145","endLine":46,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":79,"column":3,"nodeType":"144","messageId":"145","endLine":79,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":94,"column":3,"nodeType":"144","messageId":"145","endLine":94,"endColumn":15},{"ruleId":"111","severity":1,"message":"146","line":6,"column":13,"nodeType":"113","messageId":"114","endLine":6,"endColumn":30},{"ruleId":"111","severity":1,"message":"147","line":8,"column":3,"nodeType":"113","messageId":"114","endLine":8,"endColumn":10},{"ruleId":"111","severity":1,"message":"148","line":10,"column":3,"nodeType":"113","messageId":"114","endLine":10,"endColumn":10},{"ruleId":"111","severity":1,"message":"149","line":14,"column":10,"nodeType":"113","messageId":"114","endLine":14,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":24,"column":7,"nodeType":"152","endLine":24,"endColumn":24},{"ruleId":"111","severity":1,"message":"153","line":76,"column":28,"nodeType":"113","messageId":"114","endLine":76,"endColumn":35},{"ruleId":"111","severity":1,"message":"154","line":76,"column":46,"nodeType":"113","messageId":"114","endLine":76,"endColumn":52},{"ruleId":"124","severity":1,"message":"155","line":82,"column":18,"nodeType":"156","endLine":84,"endColumn":6},{"ruleId":"124","severity":1,"message":"157","line":85,"column":22,"nodeType":"156","endLine":85,"endColumn":52},{"ruleId":"111","severity":1,"message":"158","line":92,"column":9,"nodeType":"113","messageId":"114","endLine":92,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":121,"column":15,"nodeType":"152","endLine":121,"endColumn":66},{"ruleId":"150","severity":1,"message":"151","line":125,"column":17,"nodeType":"152","endLine":125,"endColumn":53},{"ruleId":"120","severity":1,"message":"121","line":14,"column":42,"nodeType":"122","messageId":"123","endLine":14,"endColumn":44},"no-unused-vars","'firebaseConnect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"'logoutBtnClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authMessageReset' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["163"],"'loginAction' is defined but never used.",["164"],"React Hook useEffect has a missing dependency: 'blur'. Either include it or remove the dependency array.",["165"],"'Collection' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["166","167"],["168","169"],["170","171"],["172","173"],"Expected '!==' and instead saw '!='.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'MaterializeNavbar' is defined but never used.","'NavItem' is defined but never used.","'Divider' is defined but never used.","'round' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'authuid' is assigned a value but never used.","'logout' is assigned a value but never used.","Assignments to the 'navbarElem' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'navbraInstance' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'closeNavbar' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},{"desc":"177","fix":"178"},{"messageId":"179","fix":"180","desc":"181"},{"messageId":"182","fix":"183","desc":"184"},{"messageId":"179","fix":"185","desc":"181"},{"messageId":"182","fix":"186","desc":"184"},{"messageId":"179","fix":"187","desc":"181"},{"messageId":"182","fix":"188","desc":"184"},{"messageId":"179","fix":"189","desc":"181"},{"messageId":"182","fix":"190","desc":"184"},"Update the dependencies array to be: [authMessage, authMessageReset, history]",{"range":"191","text":"192"},{"range":"193","text":"192"},"Update the dependencies array to be: [blur, valid]",{"range":"194","text":"195"},"removeEscape",{"range":"196","text":"197"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"198","text":"199"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"200","text":"197"},{"range":"201","text":"199"},{"range":"202","text":"197"},{"range":"203","text":"199"},{"range":"204","text":"197"},{"range":"205","text":"199"},[1339,1352],"[authMessage, authMessageReset, history]",[2038,2051],[531,538],"[blur, valid]",[204,205],"",[204,204],"\\",[229,230],[229,229],[238,239],[238,238],[242,243],[242,242]]